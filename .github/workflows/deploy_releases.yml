name: Deploy Releases

# Trigger the workflow on pushes to tags matching 'v*.*.*'
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

    # --- Arduino Build ---
      - name: Compile Arduino Sketch
        uses: arduino/compile-sketches@v1
        with:
          sketch-paths: |
            - ./A2560_BoardR2/Digifiz/
          fqbn: "arduino:avr:mega"
          libraries: |
            - name: MD_MAX72xx
            - source-url: https://github.com/sparkfun/SparkFun_External_EEPROM_Arduino_Library.git
            - name: RTCLib
            - source-url: https://github.com/adafruit/Adafruit_BusIO.git
            - name: MedianFilterLib2
          output-dir: ./build

      - name: Collect Arduino Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: arduino-firmware
          path: |
            ./build/**/*.hex
            ./build/**/*.bin
            ./build/**/*.elf

      # --- ESP-IDF Build ---
      - name: Set up ESP-IDF and Build
        uses: espressif/esp-idf-ci-action@v1.1.0
        with:
          esp_idf_version: v5.2.1
          target: esp32s3
          path: 'ESP32/Digifiz/'

      - name: Collect Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: |
            ESP32/Digifiz/build/*.bin
            ESP32/Digifiz/build/bootloader/*.bin
            ESP32/Digifiz/build/partition_table/*.bin
            ESP32/Digifiz/build/*.elf

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release for `${{ github.ref }}`.
          draft: false
          prerelease: false

      - name: Upload Firmware to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESP32/Digifiz/build/Digifiz.bin
          asset_name: Digifiz.bin
          asset_content_type: application/octet-stream
      
      - name: Upload Bootloader to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESP32/Digifiz/build/bootloader/bootloader.bin
          asset_name: bootloader.bin
          asset_content_type: application/octet-stream
      
      - name: Upload Partition Table to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESP32/Digifiz/build/partition_table/partition-table.bin
          asset_name: partition_table.bin
          asset_content_type: application/octet-stream
      
      - name: Upload OTA Initial to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESP32/Digifiz/build/ota_data_initial.bin
          asset_name: ota_data_initial.bin
          asset_content_type: application/octet-stream
      
      - name: Upload ELF to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESP32/Digifiz/build/Digifiz.elf
          asset_name: Digifiz.elf
          asset_content_type: application/octet-stream
      
      # --- Upload Arduino Firmware to Release ---
      - name: Upload Arduino Firmware to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/A2560_BoardR2/Digifiz/*.hex
          asset_name: Digifiz_A2560.hex
          asset_content_type: application/octet-stream
